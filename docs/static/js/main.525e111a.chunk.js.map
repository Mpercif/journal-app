{"version":3,"sources":["types/types.js","firebase/firebase-config.js","actions/ui.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/auth.js","Hooks/useForm.js","notes/NotesAppBar.js","notes/NoteScreen.js","Journal/NothingSelected.js","Journal/JournalEntry.js","Journal/JournalEntries.js","Journal/Sidebar.js","Journal/JournalScreen.js","Auth/LoginScreen.js","Auth/RegisterScreen.js","Routers/AuthRouter.js","Routers/PrivateRouters.js","Routers/PublicRouters.js","Routers/AppRouter.js","Reducers/notesReducer.js","Reducers/uiReducer.js","Store/store.js","Reducers/authReducer.js","JournalApp.js","index.js"],"names":["types","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","authGoogle","GoogleAuthProvider","setError","err","type","payload","finishLoading","loadNotes","uid","a","getDocs","collection","allNotes","notes","forEach","notesChild","push","id","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","setNotes","startSaveNote","dispatch","getState","auth","date","Date","getTime","url","noteToFireStore","setDoc","doc","refreshNote","Swal","fire","title","text","icon","confirmButtonText","deleteNote","addNewNote","startLoginEmailPassword","email","password","getAuth","signInWithEmailAndPassword","then","user","login","displayName","catch","e","console","log","logout","useForm","initialState","useState","value","setValue","reset","newState","handleInputChange","target","name","NotesAppBar","day","active","useSelector","state","useDispatch","className","style","display","onChange","files","showConfirmButton","showLoaderOnConfirm","onBeforeOpen","showLoading","fileUrl","close","startUpLoading","onClick","document","querySelector","click","NoteScreen","values","activeId","useRef","useEffect","current","moment","format","autoComplete","placeholder","src","alt","deleteDoc","startDeleting","NothingSelected","JournalEntry","backgroundSize","backgroundImage","JournalEntries","map","Sidebar","signOut","newNote","addDoc","ref","JournalScreen","LoginScreen","loading","ui","formValues","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","msgError","confirm","valueForm","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","userAct","currentUser","updateProfile","startRegisterWithEmailPassword","AuthRouter","path","component","PrivateRouters","isLoggedIn","Component","rest","props","PublicRouters","AppRouter","checking","setChecking","setIsLoggedIn","onAuthStateChanged","reducers","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","JournalApp","divRoot","ReactDOM","render"],"mappings":"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","file":"static/js/main.525e111a.chunk.js","sourcesContent":["\r\nexport const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New Note',\r\n    notesActive: '[Notes] Set Active Note',\r\n    notesLoad: '[Notes] Load Note',\r\n    notesUpdate: '[Notes] Update Note',\r\n    notesFileUrl: '[Notes] Update Img Note',\r\n    notesDelete: '[Notes] Delete Note',\r\n    notesLogoutCleaning: '[Notes] Cleaning Note',\r\n    \r\n\r\n}","import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore} from 'firebase/firestore/lite';\r\nimport { GoogleAuthProvider } from \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA0noEADx9K8dEd6wolQHvBMv-l4KKhE3c\",\r\n    authDomain: \"react-app-journal-17d0a.firebaseapp.com\",\r\n    projectId: \"react-app-journal-17d0a\",\r\n    storageBucket: \"react-app-journal-17d0a.appspot.com\",\r\n    messagingSenderId: \"991033802136\",\r\n    appId: \"1:991033802136:web:f1a22ab6a53d29e0d27fed\"\r\n  };\r\n\r\n  const app = initializeApp(firebaseConfig);\r\n  const db = getFirestore(app)\r\n  const authGoogle = new GoogleAuthProvider();\r\n\r\n  export {\r\n      db,\r\n      authGoogle\r\n  }","import {types} from '../types/types';\r\n\r\nexport const setError = (err)=>{\r\n    return ({\r\n        type: types.uiSetError,\r\n        payload: err\r\n    })\r\n}\r\n\r\nexport const removeError = ()=>{\r\n    return ({\r\n        type: types.uiRemoveError,\r\n    })\r\n}\r\n\r\nexport const startLoading = () =>{\r\n    return({\r\n        type: types.uiStartLoading\r\n    })\r\n}\r\n\r\nexport const finishLoading = () =>{\r\n    return({\r\n        type: types.uiFinishLoading\r\n    })\r\n}","import {collection, getDocs } from \"@firebase/firestore/lite\"\r\nimport { db } from \"../firebase/firebase-config\"\r\n\r\n\r\nexport const loadNotes = async ( uid ) =>{\r\n    const allNotes = await getDocs(collection(db, `${uid}`, 'journal/notes'))\r\n    const notes = []\r\n\r\n    allNotes.forEach(notesChild =>{\r\n        notes.push({\r\n            id: notesChild.id,\r\n            ...notesChild.data()\r\n        })\r\n    })  \r\n    \r\n    return notes\r\n}","\r\nexport const fileUpload  = async ( file ) =>{\r\n    \r\n    const urlCloud = 'https://api.cloudinary.com/v1_1/dnzouokvp/upload';\r\n    const formData = new FormData()\r\n    formData.append('upload_preset', 'journal-app')\r\n    formData.append('file', file)\r\n\r\n    try {\r\n        const resp = await fetch(urlCloud,{\r\n            method: 'POST',\r\n            body:formData\r\n        });\r\n\r\n        if(resp.ok){\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url\r\n        }else{\r\n            throw await resp.json()\r\n        }\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n\r\n}","import {addDoc,\r\n        deleteDoc,\r\n        setDoc, \r\n        collection,\r\n        doc} from \"firebase/firestore/lite\";\r\n\r\nimport Swal from 'sweetalert2'\r\n\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { types } from \"../types/types\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n\r\n\r\nexport const startNewNote = () =>{\r\n    return async (dispatch, getState) =>{\r\n\r\n        const uid = getState().auth.uid;\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n    \r\n        const ref = await addDoc(collection(db, `${uid}`,'journal/notes'), newNote)            \r\n        dispatch(activeNote(ref.id, newNote))\r\n        dispatch(addNewNote(ref.id, newNote) )\r\n    }   \r\n}\r\n\r\nexport const activeNote = (id, note) =>({\r\n    type: types.notesActive,\r\n    payload:{\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes =  (uid) => {\r\n    return async (dispatch) =>{\r\n        const notes = await loadNotes(uid)\r\n        dispatch(setNotes(notes))\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) =>({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n\r\n})\r\n\r\nexport const startSaveNote = (note) =>{\r\n    return async (dispatch, getState) =>{\r\n\r\n        const {uid} = getState().auth\r\n\r\n        note.date = new Date().getTime()\r\n\r\n        if(!note.url){\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFireStore = {...note};\r\n        delete noteToFireStore.id;\r\n\r\n        await setDoc(doc(db, `${uid}`, `/journal/notes/${note.id}`), noteToFireStore)\r\n        dispatch(refreshNote(note.id, note) )\r\n        Swal.fire({\r\n            title: 'Update ! :D ',\r\n            text: 'La nota se actualizo',\r\n            icon: 'success',\r\n            confirmButtonText: 'Entendido'\r\n          })\r\n\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id, note) =>({\r\n    type: types.notesUpdate,\r\n    payload:{\r\n        id, \r\n        note\r\n    }\r\n})\r\n\r\n\r\nexport const startUpLoading = (file) =>{\r\n    return async (dispatch, getState) =>{\r\n        const {active: activeNote} = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading ...',\r\n            text: 'Pls Wait... :D',\r\n            showConfirmButton:false,\r\n            showLoaderOnConfirm:true,\r\n            onBeforeOpen: ()=>{\r\n                Swal.showLoading()\r\n            }\r\n          });\r\n\r\n          const fileUrl = await fileUpload(file)\r\n          activeNote.url = fileUrl\r\n          dispatch(startSaveNote(activeNote))\r\n\r\n          Swal.close()\r\n        \r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) =>{\r\n    return async (dispatch,  getState) =>{\r\n        const {uid} = getState().auth;\r\n        await deleteDoc(doc(db, `${uid}`,`/journal/notes/${id}`) )\r\n\r\n        await dispatch(deleteNote(id));\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) =>({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const cleaningNotes = () => ({\r\n    type: types.notesLogoutCleaning\r\n})\r\n\r\nexport const addNewNote = (id,note) =>({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, \r\n        ...note\r\n    }\r\n})\r\n","import Swal from 'sweetalert2'\r\n\r\nimport {types} from '../types/types'\r\nimport {getAuth, \r\n        signInWithPopup, \r\n        createUserWithEmailAndPassword,\r\n        signInWithEmailAndPassword,\r\n        updateProfile\r\n    } from 'firebase/auth'\r\nimport { authGoogle } from '../firebase/firebase-config';\r\nimport { finishLoading, startLoading } from './ui';\r\nimport { cleaningNotes, startLoadingNotes } from './notes';\r\n\r\n\r\nexport const startLoginEmailPassword = (email, password)=>{\r\n    return (dispatch)=>{\r\n\r\n        dispatch(startLoading());\r\n\r\n        const auth = getAuth();\r\n        \r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then( ({user}) =>{\r\n                dispatch(finishLoading());\r\n                dispatch(login(user.uid, user.displayName))\r\n            } )\r\n            .catch( e=>{\r\n                dispatch(finishLoading());\r\n                console.log(e);\r\n                Swal.fire({\r\n                    title: 'Error !',\r\n                    text: 'Correo o contraseña erroneo',\r\n                    icon: 'error',\r\n                    confirmButtonText: 'Entendido'\r\n                  })\r\n            })\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPassword = (email, password, name) =>{\r\n    return (dispatch) =>{\r\n        const auth = getAuth();\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n            .then(async({user})=>{\r\n                const userAct = auth.currentUser;\r\n                await updateProfile(userAct, {displayName: name})\r\n                await dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            })\r\n            .catch( () =>{\r\n                Swal.fire({\r\n                    title: 'Error !',\r\n                    text: 'Correo o contraseña erroneo',\r\n                    icon: 'error',\r\n                    confirmButtonText: 'Entendido'\r\n                  })\r\n            })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin= ()=>{\r\n    return (dispatch)=>{\r\n        const auth = getAuth()\r\n        signInWithPopup(auth, authGoogle)\r\n            .then(({user}) =>{\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const login = (uid, displayName)=>{\r\n    return{\r\n        type: types.login,\r\n        payload: {\r\n            uid, \r\n            displayName\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLogout = ()=>{\r\n    return async(dispatch) =>{\r\n        const auth = getAuth()\r\n        await auth.signOut()\r\n\r\n        dispatch(logout())\r\n        dispatch(cleaningNotes())\r\n    }\r\n}\r\n\r\nexport const logout = ()=>{\r\n    return{\r\n        type: types.logout\r\n    }\r\n}","import { useState } from \"react\"\r\n\r\nexport const useForm = (initialState={}) => {\r\n\r\n    const [value, setValue] = useState(initialState)\r\n\r\n    const reset = (newState = initialState)=>{\r\n        setValue(newState)\r\n    }\r\n\r\n    // NOTA: Es imporntante desestructurar el valor de value con el mismo\r\n    //        nombre que tiene el \"name\"  del input :\r\n    \r\n    //  const [{desc},handleInputChange, reset ] = useForm({desc: ''})\r\n \r\n    const handleInputChange = ({target})=>{\r\n        setValue({\r\n            ...value,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    return [value, handleInputChange, reset]\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUpLoading } from '../actions/notes'\r\n\r\nexport const NotesAppBar = ({day}) => {\r\n\r\n    const {active} = useSelector(state => state.notes)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSaveNote = () =>{\r\n        dispatch(startSaveNote(active))\r\n    }\r\n\r\n    const handleClickPicture = () =>{\r\n        document.querySelector('#file').click();\r\n    }\r\n    \r\n    const handelClickFile = (e) =>{\r\n        const file = e.target.files[0]\r\n        dispatch(startUpLoading(file) )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>{day}</span>\r\n            <input \r\n                id=\"file\"\r\n                type=\"file\"\r\n                style={{display:\"none\"}}\r\n                onChange={handelClickFile}\r\n                \r\n                />\r\n            <div>\r\n                <button \r\n                    className=\"buttons mr-5\"\r\n                    onClick={handleClickPicture}\r\n                >\r\n                    Picture\r\n                </button>\r\n                <button \r\n                    className=\"buttons\"\r\n                    onClick={handleSaveNote}\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport moment from 'moment'\r\n\r\n\r\nimport {useForm} from '../Hooks/useForm';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { NotesAppBar } from './NotesAppBar'\r\nimport { activeNote, startDeleting } from '../actions/notes';\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {active: note} = useSelector(state => state.notes)\r\n    const [values, handleInputChange, reset] = useForm(note)\r\n\r\n    const {url, title, body, date, id} = values\r\n    \r\n    \r\n    const activeId = useRef(note.id)\r\n\r\n    const handleClickDelete = () =>{\r\n        dispatch(startDeleting(id))\r\n    }\r\n    \r\n    useEffect(() => {\r\n        \r\n        if(note.id !== activeId.current){\r\n            reset(note)\r\n            activeId.current = note.id\r\n        }\r\n        \r\n    }, [note, activeId, reset])\r\n    \r\n    useEffect(() => {\r\n        dispatch(activeNote(values.id, {...values}) )\r\n    }, [values, dispatch])\r\n    \r\n    const day = moment(date)\r\n          \r\n    return (\r\n        <div className=\"notes__main-content animate__animated animate__fadeIn\">\r\n            <NotesAppBar\r\n                day={day.format( \"LL\")}\r\n            />\r\n            <div className=\"notes__content\">\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                />\r\n\r\n                <textarea \r\n                    placeholder=\"What happened today ?\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                />\r\n                {\r\n                    (url)\r\n                    &&\r\n                    <div className=\"notes__image\">\r\n                        <img\r\n                            src={`${url}`}\r\n                            alt=\"planetas\"\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n                <button \r\n                    onClick={handleClickDelete}\r\n                    className=\"buttons danger\"\r\n                >\r\n                    Delete\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content animate__animated animate__fadeInLeftBig \">\r\n\r\n            <p>\r\n                Select something\r\n                <br />\r\n                Or Create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"  />\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../actions/notes';\r\n\r\nexport const JournalEntry = ({id, date, title, body, url }) => {\r\n    const day = moment(date)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleEntryClick = ()=>{\r\n        dispatch(activeNote(id, {date, title, body, url}))\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer animate__animated animate__fadeInLeft\" \r\n            id={id}\r\n            onClick={handleEntryClick}\r\n        \r\n        >\r\n            {\r\n            (url) &&\r\n            <div className=\"journal__entry-picture\"\r\n                style={{\r\n                    backgroundSize: 'cover',\r\n                    backgroundImage: `url(${url})`\r\n                }}\r\n            ></div>\r\n            }\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                   {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n            <div className=\"journal__entry-date-box\">\r\n                 <span>{day.format('dddd')}</span>\r\n                 <h4>{day.format('Do')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { JournalEntry } from './JournalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const {notes} = useSelector(state => state.notes)\r\n    console.log(notes);\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            \r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry\r\n                        key={note.id}\r\n                        {...note}\r\n                    />\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../actions/auth'\r\nimport { startNewNote } from '../actions/notes'\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {name} = useSelector(state => state.auth)\r\n\r\n    const handleLogOut = ()=>{\r\n        dispatch(startLogout())\r\n    }\r\n\r\n    const handleAddEntry = ()=>{\r\n        dispatch(startNewNote())\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon mr-1\"></i>\r\n                    <span>\r\n                        {name}\r\n                    </span>\r\n                </h3>\r\n                \r\n                <button \r\n                    className=\"buttons mt-5\"\r\n                    onClick={handleLogOut}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n            <div className=\"journal__new-entry pointer\"\r\n                onClick={handleAddEntry}\r\n            >\r\n                <i className=\"far fa-calendar-plus mt-5\"></i>\r\n                <p className=\"mt-5\">\r\n                    New Entry\r\n                </p>\r\n            </div>\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className=\"journal__main-content\">\r\n            \r\n            <Sidebar /> \r\n\r\n            <main>\r\n                {\r\n                    (active)\r\n                    ?<NoteScreen />\r\n                    :<NothingSelected />\r\n                }\r\n                \r\n            </main>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../actions/auth'\r\nimport { useForm } from '../Hooks/useForm'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {loading} = useSelector(state => state.ui)\r\n\r\n   \r\n    const [formValues, handleInputChange] = useForm({\r\n         email: 'mpercig@gmail.com',\r\n         password: '123456'\r\n     })\r\n\r\n    const {email, password} = formValues\r\n\r\n     const handleLogin = (e)=>{\r\n        e.preventDefault()\r\n        dispatch(startLoginEmailPassword(email, password) )\r\n     }\r\n\r\n     const handleGoogleLogIn = ()=>{\r\n        dispatch(startGoogleLogin())\r\n     }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form onSubmit={handleLogin}>\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    placeholder=\"email\"\r\n                    autoComplete=\"off\"\r\n                    className=\"auth__input\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    className=\"buttons pointer buttons__btn-primary\"\r\n                    type=\"submit\"\r\n                    disabled={loading}\r\n                >\r\n                    Ingresar\r\n                </button>\r\n\r\n                <div \r\n                    className=\"google-btn\" \r\n                    onClick={handleGoogleLogIn}\r\n                \r\n                >\r\n                    <div className=\"google-icon-wrapper\">\r\n                        <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                    </div>\r\n                    <p className=\"btn-text\">\r\n                        <b>Sign in with google</b>\r\n                    </p>\r\n                </div>\r\n\r\n                <Link \r\n                    className=\"link\"\r\n                    to=\"/auth/register\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n                \r\n                \r\n\r\n            </form>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../Hooks/useForm'\r\nimport validator from 'validator'\r\nimport { removeError, setError } from '../actions/ui'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startRegisterWithEmailPassword } from '../actions/auth'\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const state = useSelector(state => state.ui);\r\n    const {msgError} = state;\r\n\r\n  \r\n    const [valueForm, handleInputChange] = useForm({\r\n        name: 'Miguel Angel', \r\n        email: 'mpercig@gmail.com', \r\n        password: '123456', \r\n        confirm: '123456'\r\n    });\r\n\r\n    const {name, email, password, confirm} = valueForm;\r\n\r\n    const handleInput = (e)=>{\r\n        e.preventDefault()\r\n\r\n        if (isFormValid()){\r\n            dispatch(startRegisterWithEmailPassword(email,password,name))\r\n        }\r\n\r\n    };\r\n  \r\n\r\n    const isFormValid = ()=>{\r\n        if(name.trim().length === 0){\r\n            dispatch(setError('El nombre es requerido'))\r\n            return false\r\n        }else if(!validator.isEmail(email)){\r\n            dispatch(setError('Email no valido'))\r\n            return false\r\n        }else if(password !== confirm && password.length < 5){\r\n            dispatch(setError('Las contraseñas no coinciden'))\r\n            return false\r\n        }\r\n        dispatch(removeError())\r\n        return true\r\n    }\r\n\r\n    return (\r\n<>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form onSubmit={handleInput}>\r\n                {\r\n                    (msgError) \r\n                    && \r\n                    <div className=\"auth__errors\">\r\n                        {`${msgError}`}\r\n                    </div>\r\n                }\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Name\"\r\n                    autoComplete=\"off\"\r\n                    className=\"auth__input\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    autoComplete=\"off\"\r\n                    className=\"auth__input\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input \r\n                    type=\"password\"\r\n                    name=\"confirm\"\r\n                    placeholder=\"Confirm Pass\"\r\n                    className=\"auth__input\"\r\n                    value={confirm}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    className=\"buttons buttons__btn-primary\"\r\n                    type=\"submit\"\r\n                >\r\n                    Register...\r\n                </button>\r\n                \r\n                <Link\r\n                    className=\"link\"\r\n                    to=\"/auth/login\"\r\n                >\r\n                    Already registered?\r\n                </Link>\r\n            </form>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\n\r\nimport { LoginScreen } from '../Auth/LoginScreen'\r\nimport { RegisterScreen } from '../Auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route  path=\"/auth/login\" component={LoginScreen} />\r\n                    <Route  path=\"/auth/register\" component={RegisterScreen} />\r\n                    <Redirect to=\"/auth/login\" />              \r\n                </Switch>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\n\r\nexport const PrivateRouters = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) =>( \r\n                (isLoggedIn)\r\n                ? <Component {...props} />\r\n                : <Redirect to='/auth/login' />\r\n            )}\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\n\r\nexport const PublicRouters = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route  {...rest}\r\n            component={(props) =>( \r\n                (isLoggedIn)\r\n                ? <Redirect to='/' />\r\n                : <Component {...props} />    \r\n            )}        \r\n\r\n        />\r\n    )\r\n}\r\n","import { getAuth } from '@firebase/auth';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n  } from \"react-router-dom\";\r\n\r\n  \r\nimport { login } from '../actions/auth';\r\nimport { JournalScreen } from '../Journal/JournalScreen'\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { PrivateRouters } from './PrivateRouters';\r\nimport { PublicRouters } from './PublicRouters';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [checking, setChecking] = useState(true)\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        const auth = getAuth()\r\n        auth.onAuthStateChanged((user) =>{\r\n\r\n            if(user?.uid){\r\n                dispatch(login(user.uid, user.displayName));\r\n                setIsLoggedIn(true);\r\n                dispatch(startLoadingNotes(user.uid));\r\n            }else{\r\n                setIsLoggedIn(false)\r\n            }\r\n\r\n            setChecking(false);\r\n        })\r\n\r\n    }, [dispatch, setChecking, setIsLoggedIn]);\r\n\r\n    if(checking){\r\n        return(\r\n            <h1>Espere...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRouters \r\n                        isLoggedIn={isLoggedIn}\r\n                        path=\"/auth\" \r\n                        component={AuthRouter} \r\n                    />   \r\n                    <PrivateRouters \r\n                        isLoggedIn={isLoggedIn}\r\n                        path=\"/\" \r\n                        component={JournalScreen} \r\n                    />           \r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = ( state=initialState, action )=>{\r\n\r\n    switch (action.type) {\r\n        \r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return{\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n        \r\n        case types.notesLoad:\r\n            return{\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n\r\n        case types.notesUpdate:\r\n            return{\r\n                ...state,\r\n                notes: state.notes.map( \r\n                    note => note.id === action.payload.id\r\n                    ? action.payload.note\r\n                    : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return{\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return{\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\nexport const uiReducer = (state = initialState, action)=>{\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return{\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return{\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state, \r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return{\r\n                ...state, \r\n                loading: false\r\n            }\r\n                \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import {createStore, \r\n        combineReducers, \r\n        compose,\r\n        applyMiddleware\r\n    } from 'redux'\r\n    \r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nimport { authReducer } from '../Reducers/authReducer'\r\nimport { notesReducer } from '../Reducers/notesReducer';\r\nimport { uiReducer } from '../Reducers/uiReducer';\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = ( state = {}, action ) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.login:\r\n            return{\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }      \r\n\r\n        case types.logout:\r\n            return{}              \r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import React from 'react'\r\nimport {Provider} from 'react-redux'\r\n\r\nimport { AppRouter } from './Routers/AppRouter'\r\nimport { store } from './Store/store'\r\n\r\n\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store} >\r\n            <AppRouter /> \r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Styles/style.scss'\r\n\r\nimport { JournalApp } from './JournalApp';\r\n\r\nconst divRoot = document.querySelector('#root')\r\n\r\nReactDOM.render(<JournalApp />, divRoot )"],"sourceRoot":""}